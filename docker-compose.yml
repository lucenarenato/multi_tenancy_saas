version: "3"
services:
    redis:
        image: "redis:alpine"
        container_name: "${APP_NAME}_redis"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "${DATA_PATH_HOST}/redis:/data"
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    php-fpm:
        build:
            args:
                user: webuser
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        container_name: "${APP_NAME}_php_fpm"
        restart: unless-stopped
        logging:
            options:
                max-size: "5k"
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ./docker/php-fpm/laravel.ini:/usr/local/etc/php/conf.d/app.ini
        networks:
            - sail
        expose:
            - "9000"
        depends_on:
            - mysql
            - redis
            # - npm
            # - websockets
            - queue
            # - meilisearch
            # - mailpit
            # - selenium

    nginx:
        build:
            context: "./docker/nginx"
            args:
                queueTimeout: 30
                queueTries: 2
                queues: default,indexing,notifications
        container_name: "${APP_NAME}_nginx"
        depends_on:
            - php-fpm
        environment:
            PUSHER_PORT: ${PUSHER_PORT}
        volumes:
            - ${NGINX_SSL_PATH}:/etc/nginx/ssl
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
            - ./docker/localhost/:/etc/letsencrypt/live/localhost/
            - /etc/letsencrypt/:/etc/letsencrypt/
        ports:
            - "${NGINX_HOST_HTTPS_PORT}:443"
            - "${NGINX_HOST_HTTP_PORT}:80"
        networks:
            - sail

    # laravel-horizon:
    #     build:
    #         context: ./docker/laravel-horizon
    #     container_name: "${APP_NAME}_horizon"
    #     volumes:
    #         - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    #         - ./docker/laravel-horizon/supervisord.d:/etc/supervisord.d
    #     depends_on:
    #         - php-fpm
    #     # extra_hosts:
    #     #     - "dockerhost:${DOCKER_HOST_IP}"
    #     networks:
    #         - sail

    mysql:
        container_name: "${APP_NAME}_MYSQL"
        image: mysql:8.0.30-debian
        command: --default-authentication-plugin=mysql_native_password
            --max_connections=666
            --bind-address=0.0.0.0
            --transaction-isolation=READ-COMMITTED
        restart: unless-stopped
        environment:
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - sail-mysql:/var/lib/mysql
            - "./create-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE
        security_opt:
            - seccomp:unconfined
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    phpmyadmin:
        container_name: "${APP_NAME}_PHPMYADMIN"
        image: phpmyadmin/phpmyadmin
        ports:
            - 8082:80
        environment:
            PMA_HOSTS: mysql
            PMA_PORT: ${FORWARD_DB_PORT:-3306}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-userpass}
            PMA_ARBITRARY: 1
            UPLOAD_LIMIT: 350M
        networks:
            - sail
    composer:
        image: composer:latest
        container_name: ${APP_NAME}_composer
        volumes:
        - ./:/var/www/html:delegated
        - ./dockerfiles/composer/packages/:/var/www/packages/
        working_dir: /var/www/html
        entrypoint: ['composer']
        networks:
        - sail
        user: 1000:1000

    artisan:
        build:
            context: ./docker
            dockerfile: artisan.dockerfile
        container_name: ${APP_NAME}_artisan
        volumes:
            - ./:/var/www/html:delegated
            - ./docker/composer/packages/:/var/www/packages
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: ["php", "/var/www/html/artisan"]
        networks:
            - sail
        user: 1000:1000
    npm:
        image: node:lts-alpine
        container_name: ${APP_NAME}_npm
        volumes:
            - ./:/var/www/html:delegated
            - ./storage/mysql:/var/lib/mysql
            - ./docker/localhost/:/var/www/certs
            - ./docker/npm/logs/:/root/.npm/_logs/
        ports:
            - 3000:3000
            - 13714:13714
            - 5173:5173
        working_dir: /var/www/html
        entrypoint: ["npm"]
        networks:
            - sail
        user: 1000:1000
    certbot:
        image: certbot/certbot:latest
        container_name: ${APP_NAME}_certbot
        command: certonly --webroot --webroot-path=/var/www/html/public --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${APP_FQDN} -v
        volumes:
            - ./:/var/www/html:delegated
            - /etc/letsencrypt/:/etc/letsencrypt/
            - ./docker/certbot/logs/:/var/log/letsencrypt
            - ./docker/certbot/data:/usr/share/nginx/html/letsencrypt
    # meilisearch:
    #     image: "getmeili/meilisearch:latest"
    #     ports:
    #         - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
    #     volumes:
    #         - "sail-meilisearch:/meili_data"
    #     networks:
    #         - sail
    #     healthcheck:
    #         test:
    #             - CMD
    #             - wget
    #             - "--no-verbose"
    #             - "--spider"
    #             - "http://localhost:7700/health"
    #         retries: 3
    #         timeout: 5s
    # mailpit:
    #     image: "axllent/mailpit:latest"
    #     ports:
    #         - "${FORWARD_MAILPIT_PORT:-1025}:1025"
    #         - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
    #     networks:
    #         - sail
    # selenium:
    #     image: selenium/standalone-chrome
    #     extra_hosts:
    #         - "host.docker.internal:host-gateway"
    #     volumes:
    #         - "/dev/shm:/dev/shm"
    #     networks:
    #         - sail
    # websockets:
    #     image: php:8.2-fpm-alpine
    #     # command: ["php", "artisan", "websockets:serve"]
    #     entrypoint: ["php", "artisan", "websockets:serve"]
    #     container_name: ${APP_NAME}_websockets
    #     restart: unless-stopped
    #     working_dir: /var/www/html #${APP_CODE_PATH_CONTAINER}
    #     volumes:
    #         - ./:/var/www/html:delegated
    #         # - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    #     ports:
    #         - ${LARAVEL_WEBSOCKETS_PORT}:6001
    #     networks:
    #         - sail
    queue:
        build:
            context: ./docker
            dockerfile: artisan.dockerfile
        restart: always
        volumes:
            - ./:/var/www/html:delegated
            - ./docker/composer/packages/:/var/www/packages
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: ["php", "/var/www/html/artisan", "queue:work"]
        networks:
            - sail
        user: 1000:1000
networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
